{"ast":null,"code":"import _regeneratorRuntime from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luisca/gr10/BondiMat/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport BondiMat from \"../abis/BondiMat.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport chainlink from \"../chainlink.png\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, balance, networkId, BondiMatContractExists, BondiMatContract, tripsLeft;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                balance = _context2.sent;\n                balance = web3.utils.fromWei(balance);\n                this.setState({\n                  balance: balance\n                });\n                _context2.next = 12;\n                return web3.eth.net.getId();\n\n              case 12:\n                networkId = _context2.sent;\n                // Load BondiMat Contract information\n                BondiMatContractExists = BondiMat.networks[networkId];\n\n                if (!BondiMatContractExists) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                BondiMatContract = new web3.eth.Contract(BondiMat.abi, BondiMatContractExists.address);\n                this.setState({\n                  BondiMatContractAddress: BondiMatContractExists.address\n                });\n                this.setState({\n                  BondiMatContract: BondiMatContract\n                });\n                _context2.next = 20;\n                return BondiMatContract.methods.traveler(this.state.account).tripsLeft;\n\n              case 20:\n                tripsLeft = _context2.sent;\n                this.setState({\n                  tripsLeft: tripsLeft\n                });\n                console.log(this.state.tripsLeft); //*** This function is not working    \n\n                /*let balanceOfCont = await BondiMatContract.methods\n                  .balanceOfCont()\n                  .call()\n                this.setState({ balanceOfCont: balanceOfCont.toString() })\n                */\n\n                _context2.next = 26;\n                break;\n\n              case 25:\n                window.alert(\"BondiMat contract not deployed to detected network. Please check that Metamask is in the correct Network: Polygon (MATIC)\");\n\n              case 26:\n                //window.alert(\"Si llegamos aquí loading debería ser false\")\n                this.setState({\n                  loading: false\n                });\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"0x0\",\n      balance: 0,\n      tripsLeft: 0,\n      BondiMatContractAddress: \"\",\n      loading: true,\n      image: chainlink,\n      tokenName: \"LINK\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.balance);\n      var content;\n\n      if (this.state.loading) {\n        content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        }, \"Loading...\");\n      } else {\n        content = /*#__PURE__*/React.createElement(Main, {\n          image: this.state.image,\n          BondiMatContractAddress: this.state.BondiMatContractAddress,\n          balanceOfCont: this.state.balanceOfCont,\n          balance: this.state.balance,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: \"600px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://alphachain.io\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/luisca/gr10/BondiMat/src/components/App.js"],"names":["React","Component","Web3","BondiMat","Navbar","Main","chainlink","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","balance","utils","fromWei","net","getId","networkId","BondiMatContractExists","networks","BondiMatContract","Contract","abi","address","BondiMatContractAddress","methods","traveler","tripsLeft","console","log","alert","loading","ethereum","enable","currentProvider","props","image","tokenName","content","balanceOfCont","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Web3 from \"web3\"\nimport BondiMat from \"../abis/BondiMat.json\"\nimport Navbar from \"./Navbar\"\nimport Main from \"./Main\"\nimport \"./App.css\"\nimport chainlink from \"../chainlink.png\"\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3() // Loading Metamask\n    //window.alert(\"Aquí estamos a punto de llamar a Metamask\")\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    let balance = await web3.eth.getBalance(this.state.account)\n    balance = web3.utils.fromWei(balance)\n    this.setState({ balance: balance})\n\n    const networkId = await web3.eth.net.getId() \n\n    // Load BondiMat Contract information\n    const BondiMatContractExists = BondiMat.networks[networkId]\n    if (BondiMatContractExists) {\n      const BondiMatContract = new web3.eth.Contract(\n      BondiMat.abi, \n      BondiMatContractExists.address\n      )\n      this.setState({ BondiMatContractAddress: BondiMatContractExists.address })\n      this.setState({ BondiMatContract })\n\n      let tripsLeft = await BondiMatContract.methods.traveler(this.state.account).tripsLeft\n      this.setState({ tripsLeft: tripsLeft})\n      console.log(this.state.tripsLeft)\n\n\n\n\n\n//*** This function is not working    \n      /*let balanceOfCont = await BondiMatContract.methods\n        .balanceOfCont()\n        .call()\n      this.setState({ balanceOfCont: balanceOfCont.toString() })\n    */\n    } else {\n      window.alert(\"BondiMat contract not deployed to detected network. Please check that Metamask is in the correct Network: Polygon (MATIC)\")\n    }\n  //window.alert(\"Si llegamos aquí loading debería ser false\")\n    this.setState({ loading: false })\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      )\n    }\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: \"0x0\",\n      balance: 0,\n      tripsLeft: 0,\n      BondiMatContractAddress: \"\",\n      loading: true,\n      image: chainlink,\n      tokenName: \"LINK\",\n    }\n  }\n\n  render() {\n    console.log(this.state.balance)\n    let content\n    if (this.state.loading) {\n      content = (\n        <p id=\"loader\" className=\"text-center\">\n          Loading...\n        </p>\n      )\n    } else {\n      content = (\n        <Main\n          image={this.state.image}\n          BondiMatContractAddress={this.state.BondiMatContractAddress}\n          balanceOfCont={this.state.balanceOfCont}\n          balance={this.state.balance}\n        />\n      )\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"col-lg-12 ml-auto mr-auto\"\n              style={{ maxWidth: \"600px\" }}\n            >\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"https://alphachain.io\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                ></a>\n\n                {content}\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}