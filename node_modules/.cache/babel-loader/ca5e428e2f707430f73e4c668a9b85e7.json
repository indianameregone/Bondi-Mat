{"ast":null,"code":"import _regeneratorRuntime from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/luisca/gr10/BondiMat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luisca/gr10/BondiMat/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport BondiMat from \"../abis/BondiMat.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport PageMain from \"./pageMain\";\nimport SecondPage from \"./secondPage\";\nimport QRcodePage from \"./qrcode\";\nimport \"./App.css\";\nimport polygon from \"../polygon-logo.png\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, balance, networkId, BondiMatContractExists, BondiMatContract, tripCost, balanceOfCont;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3; // Load Traveler Wallet information\n\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                balance = _context2.sent;\n                balance = web3.utils.fromWei(balance);\n                this.setState({\n                  balance: balance\n                });\n                _context2.next = 12;\n                return web3.eth.net.getId();\n\n              case 12:\n                networkId = _context2.sent;\n                // Load BondiMat Contract information\n                BondiMatContractExists = BondiMat.networks[networkId];\n\n                if (!BondiMatContractExists) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                BondiMatContract = new web3.eth.Contract(BondiMat.abi, BondiMatContractExists.address);\n                this.setState({\n                  BondiMatContractAddress: BondiMatContractExists.address\n                });\n                this.setState({\n                  BondiMatContract: BondiMatContract\n                });\n                /*let tripsLeft = await BondiMatContract.methods.traveler(this.state.account).call()\n                  .then(console.log)\n                console.log(tripsLeft)\n                this.setState({ tripsLeft })\n                */\n                // Getting the Trip Cost from Contract\n\n                _context2.next = 20;\n                return BondiMatContract.methods.tripCost.call().call(function (error, result) {});\n\n              case 20:\n                tripCost = _context2.sent;\n                tripCost = web3.utils.fromWei(tripCost);\n                this.setState({\n                  tripCost: tripCost\n                }); //This function is not working    \n\n                _context2.next = 25;\n                return BondiMatContract.methods.balanceOfCont().call({\n                  from: this.state.account\n                });\n\n              case 25:\n                balanceOfCont = _context2.sent;\n                console.log(balanceOfCont); //this.setState({ balanceOfCont: balanceOfCont })\n                //console.log(tripsLeft)\n                //this.setState({ tripsLeft })\n\n                _context2.next = 30;\n                break;\n\n              case 29:\n                window.alert(\"BondiMat contract not deployed to detected network. Please check that Metamask is in the correct Network: Polygon (MATIC)\");\n\n              case 30:\n                //window.alert(\"Si llegamos aquí loading debería ser false\")\n                this.setState({\n                  loading: false\n                });\n\n              case 31:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() //Function to Buy tickets - Metamask alert: ALERT: Transaction Error. Exception thrown in contract code.\n    // Where is it specified the $$$ for metamask???\n\n  }]);\n\n  /*\n  await BondiMatContract.methods.buyTicket(1).send({from: this.state.account}, function(error, transactionHash){\n    console.log(transactionHash)\n  });\n  \n  await BondiMatContract.methods.buyTicket(this.state.account).call()\n  .then(console.log)\n  */\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.buyTicket = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      var web3 = window.web3;\n      amount = web3.utils.toWei(amount);\n\n      _this.state.BondiMatContract.methods.buyTicket(amount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.updateCost = function (new_price) {\n      var web3 = window.web3;\n      new_price = web3.utils.toWei(new_price);\n\n      _this.state.BondiMatContract.methods.updateCost(new_price).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"0x0\",\n      balance: 0,\n      tripsLeft: 10,\n      BondiMatContractAddress: \"\",\n      loading: true,\n      image: polygon,\n      tokenName: \"LINK\",\n      price: 0.07\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.tripsLeft);\n      var content;\n\n      if (this.state.loading) {\n        content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }\n        }, \"Loading...\");\n      } else {\n        content = /*#__PURE__*/React.createElement(Main, {\n          image: this.state.image,\n          BondiMatContractAddress: this.state.BondiMatContractAddress,\n          balanceOfCont: this.state.balanceOfCont,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(PageMain, {\n        tripsLeft: this.state.tripsLeft,\n        traveler: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SecondPage, {\n        price: this.state.tripCost,\n        balance: this.state.balance,\n        buyTicket: this.buyTicket.bind(this),\n        updateCost: this.updateCost.bind(this) //unstakeTokens={this.unstakeTokens.bind(this)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(QRcodePage, {\n        qrcode: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/luisca/gr10/BondiMat/src/components/App.js"],"names":["React","Component","Web3","BondiMat","Navbar","Main","PageMain","SecondPage","QRcodePage","polygon","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","balance","utils","fromWei","net","getId","networkId","BondiMatContractExists","networks","BondiMatContract","Contract","abi","address","BondiMatContractAddress","methods","tripCost","call","error","result","balanceOfCont","from","console","log","alert","loading","ethereum","enable","currentProvider","props","buyTicket","amount","toWei","send","on","hash","updateCost","new_price","tripsLeft","image","tokenName","price","content","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Web3 from \"web3\"\nimport BondiMat from \"../abis/BondiMat.json\"\nimport Navbar from \"./Navbar\"\nimport Main from \"./Main\"\nimport PageMain from \"./pageMain\"\nimport SecondPage from \"./secondPage\"\nimport QRcodePage from \"./qrcode\"\nimport \"./App.css\"\nimport polygon from \"../polygon-logo.png\"\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3() // Loading Metamask\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load Traveler Wallet information\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    let balance = await web3.eth.getBalance(this.state.account)\n    balance = web3.utils.fromWei(balance)\n    this.setState({ balance: balance})\n\n    const networkId = await web3.eth.net.getId() \n\n    // Load BondiMat Contract information\n    const BondiMatContractExists = BondiMat.networks[networkId]\n    if (BondiMatContractExists) {\n      const BondiMatContract = new web3.eth.Contract(\n      BondiMat.abi, \n      BondiMatContractExists.address\n      )\n      this.setState({ BondiMatContractAddress: BondiMatContractExists.address })\n      this.setState({ BondiMatContract })\n\n      /*let tripsLeft = await BondiMatContract.methods.traveler(this.state.account).call()\n        .then(console.log)\n      console.log(tripsLeft)\n      this.setState({ tripsLeft })\n      */\n\n      // Getting the Trip Cost from Contract\n      let tripCost = await BondiMatContract.methods.tripCost.call().call((error, result) => {});\n      tripCost = web3.utils.fromWei(tripCost)\n      this.setState({ tripCost})\n\n      //This function is not working    \n      var balanceOfCont = await BondiMatContract.methods.balanceOfCont().call({from: this.state.account})\n      console.log(balanceOfCont)\n      //this.setState({ balanceOfCont: balanceOfCont })\n    \n\n    //console.log(tripsLeft)\n    //this.setState({ tripsLeft })\n\n\n    } else {\n      window.alert(\"BondiMat contract not deployed to detected network. Please check that Metamask is in the correct Network: Polygon (MATIC)\")\n    }\n  //window.alert(\"Si llegamos aquí loading debería ser false\")\n    this.setState({ loading: false })\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n        window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      )\n    }\n  }\n\n  //Function to Buy tickets - Metamask alert: ALERT: Transaction Error. Exception thrown in contract code.\n  // Where is it specified the $$$ for metamask???\n  buyTicket = (amount) => {\n    this.setState({ loading: true })\n    const web3 = window.web3\n    amount = web3.utils.toWei(amount)\n    this.state.BondiMatContract.methods\n      .buyTicket(amount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false })\n      })\n  };\n      \n  //Function to Update the cost of tickets\n  updateCost = (new_price) => {\n    const web3 = window.web3\n    new_price = web3.utils.toWei(new_price)\n    this.state.BondiMatContract.methods\n      .updateCost(new_price)\n      .send({ from: this.state.account})\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false })\n      })  \n  };\n  \n      /*\n      await BondiMatContract.methods.buyTicket(1).send({from: this.state.account}, function(error, transactionHash){\n        console.log(transactionHash)\n      });\n      \n      await BondiMatContract.methods.buyTicket(this.state.account).call()\n      .then(console.log)\n      */\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: \"0x0\",\n      balance: 0,\n      tripsLeft: 10,\n      BondiMatContractAddress: \"\",\n      loading: true,\n      image: polygon,\n      tokenName: \"LINK\",\n      price: 0.07,\n    }\n  }\n\n  render() {\n    console.log(this.state.tripsLeft)\n    let content\n    if (this.state.loading) {\n      content = (\n        <p id=\"loader\" className=\"text-center\">\n          Loading...\n        </p>\n      )\n    } else {\n      content = (\n        <Main\n          image={this.state.image}\n          BondiMatContractAddress={this.state.BondiMatContractAddress}\n          balanceOfCont={this.state.balanceOfCont}\n        />\n      )\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n          </div>\n        </div>\n        <PageMain \n          tripsLeft={this.state.tripsLeft}\n          traveler={this.state.account}\n        />\n        <SecondPage \n          price={this.state.tripCost}\n          balance={this.state.balance}\n          buyTicket={this.buyTicket.bind(this)}\n          updateCost={this.updateCost.bind(this)}\n          //unstakeTokens={this.unstakeTokens.bind(this)}\n          />\n        <QRcodePage \n          qrcode={this.state.account}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}